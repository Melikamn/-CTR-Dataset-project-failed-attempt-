import pandas as pd


df = pd.read_csv(r"C:\Users\pc-iran\Desktop\ctr_prediction_project\data\avazu_ctr_synthetic_sample.csv")

print("üìä Rows & Columns:", df.shape)
print("\nüîπ Sample rows:")
print(df.head())


print("\nüìã Data types:")
print(df.dtypes)

print("\nüîç Missing values:")
print(df.isnull().sum())


print("\nüéØ Target distribution (clicked):")
print(df['click'].value_counts(normalize=True))

import pandas as pd
from sklearn.preprocessing import LabelEncoder


df['hour'] = df['hour'].astype(str)
df['day'] = df['hour'].str[4:6].astype(int)
df['hour_of_day'] = df['hour'].str[6:8].astype(int)
df['weekday'] = pd.to_datetime(df['hour'], format='%y%m%d%H').dt.weekday
df.drop('hour', axis=1, inplace=True)


df.drop('id', axis=1, inplace=True)


categorical_cols = df.select_dtypes(include='object').columns


label_encoders = {}
for col in categorical_cols:
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col])
    label_encoders[col] = le  # ÿ®ÿ±ÿß€å ÿ®ÿßÿ≤€åÿßÿ®€å €åÿß ÿ™ÿ≥ÿ™ ÿ®ÿπÿØ€å


print("‚úÖ final shape of data :")
print(df.head())


for col in categorical_cols:
    uniq_vals = df[col].nunique()
    print(f"{col}: {uniq_vals} unique values")

site_category: 8
app_category: 7
device_type: 4
device_conn_type: 3
target = df['click'].reset_index(drop=True)

from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer


one_hot_cols = ['site_category', 'app_category', 'device_type', 'device_conn_type']

label_cols = [col for col in categorical_cols if col not in one_hot_cols]


for col in label_cols:
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col])


preprocessor = ColumnTransformer(
    transformers=[
        ('onehot', OneHotEncoder(handle_unknown='ignore', sparse=False), one_hot_cols)
    ],
    remainder='passthrough'  
)


import numpy as np

df_processed = preprocessor.fit_transform(df)


column_names = preprocessor.get_feature_names_out()
df_final = pd.DataFrame(df_processed, columns=column_names)


df_final['click'] = target


print(f"‚úÖ final shape of datas after mixing Label + OneHot:")
print(df_final.shape)
df_final.head()

from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix, roc_auc_score


X = df_final.drop('click' , axis=1)
y = df_final['click']


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)


y_pred = model.predict(X_test)
y_prob = model.predict_proba(X_test)[:,1]


print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
print("\nROC AUC Score:", roc_auc_score(y_test, y_prob))
